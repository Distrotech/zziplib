<H3> About Web Accessibility Features </H3>

<P>
  While trying to create the most pleasing layout it happens that many
  people forget about Web Accessibility - to get the most information
  about this topic you should read the introduction of the 
  <a href="http://www.w3.org/WAI/">W3C&nbsp;WAI</a> = 
  the <em>Web Accessibility Initiative</em> of the 
   <em>World Wide Web Consortium</em>.
  The <a href="http://www.w3.org/WAI/">w3.org/<small>WAI</small></a> 
  page starts off by saying
  <BLOCKQUOTE>
    &nbsp;"The power of the Web is in its universality.
<br> &nbsp; 
    Access by everyone regardless of disability is an essential aspect."
  <br>
    -- Tim Berners-Lee, W3C Director and inventor of the World Wide Web
  </BLOCKQUOTE>
</P>
<P>
  There is a lot about web accessibility that can be done by the 
  author of the web content, including to provide <code>alt=""</code> texts
  everywhere. For the mksite.sh project we care much to help with 
  the <b>navigation</b> of the webpage. For users of graphical
  browsers it is best to have a navigation using pale background
  colors that can guide the eye. Small monochrome browsers are
  still widespread among mobile devices. And the biggest challenge
  is about blind people that can only read web content one line
  at a time with the help of a braille terminal. And while blind
  people might seem low in number to the common people then you
  should still be very aware of the <em>"visually impaired"</em> group 
  ranging between 10%-20% of the population (your grandma might be 
  one of those) and let's not forget about those 9% of healthy male 
  people being color-blind towards red or green.
</P>
<P>
  With mksite.sh we ask you to write a "sitefile" that <em>&nbsp;(a)</em> 
  contains html markup complex enough to build colored visual structure for
  desktop graphical screens [the biggest audience]  <em>&nbsp;(b)</em> and 
  put the references to associated pages into known places with known 
  markups that we can parse an "access-tree" of sect/subsect pages.
  From the sect/subsect relations we can automatically generate
  alternative navigations to help accessibility to the content of
  your website. The two most prominent features are:
<ul>
<li> <b>sitemap</b>: 
     list all pages with a long description in an overview
     page. They clearly show the sect/subsect relation as well as
     next/previous page. The descriptions are assembled from the title 
     lines of each associated page which are generally longer than the
     shorthands of a navigation bar in the sitefile. In earlier projects
     I did also parse an "info" line from the associated pages, i.e.
     a subtitle/shortsummary. This has not yet been integrated into
     mksite.sh
</li>
<li> <b>printer-friendly</b>: 
     the name of this feature is more targetted towards those unaware
     of `web accessibility`. It does not only cut away unneeded
     layout markup of the sitefile (including the css based coloring)
     but it also adds a simplified navigation at the top - but which
     still has all the sect/subsect relation. This navigation is also
     useful for <em>PDA screens</em> and other graphical mobile devices with
     small monochrome screen size and only a four-way key to move
     around over the hotlinks on a screen.
</li>
</ul>
<P>
    So let's check back with <a href="http://www.w3.org/TR/WAI-WEBCONTENT">
    w3.org/<small>TR/WAI-WEBCONTENT</small></a>, 
    the <em>Web Content Accessibility Guidelines 1.0</em>, 
    where section 12, 13, 14 are most relevant to the
    functionality targetted at with the mksite.sh project, and hinted
    more strongly in the <a href="http://www.w3.org/TR/WAI-WEBCONTENT-TECHS">
    w3.org/<small>TR/WAI-WEBCONTENT-TECHS</small></a> pages, the 
    <em>Techniques for Web Content Accessibility Guidelines 1.0</em>.
</P>
<H4> "12" Provide context and orientation information </H4>
<ul>
<li> <b>12.1</b> 
     Title each frame to facilitate frame identification and navigation. 
     [Priority 1]
<br><em>HTML Techniques</em>: Providing a frame title.
<br><b>mksite.sh</b>: parse out &lt;title&gt; or the first of the
     &lt;h1&gt; &lt;h2&gt; ... &lt;h6&gt; as the $title meta variable.
     A sitefile can pick it up on its &lt;title&gt; presentation
     including a prefix that categorizes the web page into a larger
     context.
</li>
<li> <b>12.2</b>
     Describe the purpose of frames and how frames relate to each other 
     if it is not obvious by frame titles alone. 
     [Priority 2] 
<br><em> Core Techniques</em>: Text equivalents
<br><em> HTML Techniques</em>: Describing frame relationships
<br><b> mksite.sh </b>:
     The recognition of sect/subsect relations is taken out of the
     markup in the sitefile for graphical representtion. The used
     markups encourage clear relation designation of references pages.
     The sect/subsect relations will build a printer-friendly layout
     with pages on the same sect/subect level on one line. That creates
     clear parent/children and next/previous relations.
</li>
<li> <b>12.2</b> Divide large blocks of information into more manageable 
     groups where natural and appropriate. [Priority 2] 
<br><em> HTML Techniques</em>: Structural grouping
<br><em> HTML Techniques</em>: Grouping form controls
<br><b> mksite.sh </b>
     Largely content related to the author, e.g. using tables in 
     the body. Otherwise we encourage to split long pages into more
     manageable parts and bind the via a sitefile.
</li>
</ul>
<H4> "13" Provide clear navigation mechanisms </H4>
<ul>
<li> <b>13.1</b> 
   Clearly identify the target of each link. [Priority 2]
<br><em> HTML Techniques</em>: Link text
</li>
<li> <b>13.2</b> 
   Provide metadata to add semantic information to pages and sites. 
   [Priority 2]
<br><em> Core Techniques</em>: Navigation
<br><em> HTML Techniques</em>: Metadata
<br><em> CSS Techniques</em>: Providing contextual clues in HTML lists
<br><b> mksite.sh </b>:
   We generate automatically metadata information in the html head and
   allow users to extend it and override the defaults - mksite.sh
   does generate some defaults. The html head meta tags are however
   only useful to special user agents or search bots.
</li>
<li> <b>13.3</b> 
   Provide information about the general layout of a site 
   (e.g., a site map or table of contents). [Priority 2]
<br><em> Core Techniques</em>: Navigation
<br><b> mksite.sh </b>:
   We generate a <a href="site.html">site map</a>
   - all automically. Just name it as a link in your sitefile.
</li>
<li> <b>13.4</b> 
   Use navigation mechanisms in a consistent manner. [Priority 2]
<br><em> Core Techniques</em>: Navigation
<br><b> mksite.sh </b>:
   We encourage to use a single sitefile with the navigation items
   for <em>all</em> assiated pages - including pages in subdirectories
   of the main website. If the website gets a bit too big then you
   can use the "mulitsectionlayout" that will split the navigation
   items in a consistent manner.
</li>
</ul>
<H4> "14" Ensure that documents are clear and simple. </H4>
<ul>
<li> <b>14.1</b> 
     Use the clearest and simplest language appropriate for a site's 
     content. [Priority 1]
<br><em> Core Techniques</em>: Comprehension
</li>
<li> <b>14.3</b> 
    Create a style of presentation that is consistent across pages. 
    [Priority 3]
<br><em> Core Techniques</em>: Navigation
<br><em> CSS Techniques</em>: Decrease maintenance and increase consistency
<br><b> mksite.sh </b>:
    We encourage to use a single sitefile as the only maintenance
    object for the layout of a website. The sitefile sect/subsect
    scanning provides consistency over the associated pages. The
    site file contains the CSS block for all pages giving the a
    consistent style across.
</li>
</ul>





